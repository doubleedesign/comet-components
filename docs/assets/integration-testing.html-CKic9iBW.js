import{_ as a,c as u,b as t,a as d,e as l,w as i,d as n,r,o as g}from"./app-B-D30-e-.js";const p={},m={class:"table-of-contents"};function b(h,e){const s=r("router-link"),o=r("RouteLink");return g(),u("div",null,[e[15]||(e[15]=t("h1",{id:"integration-testing",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#integration-testing"},[t("span",null,"Integration testing")])],-1)),t("nav",m,[t("ul",null,[t("li",null,[l(s,{to:"#prerequisites"},{default:i(()=>e[0]||(e[0]=[n("Prerequisites")])),_:1})]),t("li",null,[l(s,{to:"#troubleshooting"},{default:i(()=>e[1]||(e[1]=[n("Troubleshooting")])),_:1})])])]),e[16]||(e[16]=t("div",{class:"hint-container warning"},[t("p",{class:"hint-container-title"},"Warning"),t("p",null,"// TODO: Fill in more details here")],-1)),e[17]||(e[17]=t("h2",{id:"prerequisites",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#prerequisites"},[t("span",null,"Prerequisites")])],-1)),t("ul",null,[t("li",null,[l(o,{to:"/development-core/tooling/node.html"},{default:i(()=>e[2]||(e[2]=[n("Node")])),_:1}),e[3]||(e[3]=n(" installed on your machine"))]),e[13]||(e[13]=t("li",null,[n("Project Node dependencies installed ("),t("code",null,"npm install"),n(")")],-1)),e[14]||(e[14]=t("li",null,[n("Playwright browsers installed and available on your machine (Windows users - see "),t("a",{href:"#troubleshooting"},"troubleshooting"),n(" below)")],-1)),t("li",null,[e[5]||(e[5]=t("code",null,"BROWSER_TEST_URL",-1)),e[6]||(e[6]=n(" in ")),e[7]||(e[7]=t("code",null,".env",-1)),e[8]||(e[8]=n(" in the project root directory matches your ")),l(o,{to:"/development-core/testing/browser.html"},{default:i(()=>e[4]||(e[4]=[n("Browser testing server")])),_:1}),e[9]||(e[9]=n(" configuration ")),e[10]||(e[10]=t("ul",null,[t("li",null,[n("If you're using the basic PHP web server, it should be "),t("code",null,"http://localhost:6001")]),t("li",null,[n("If you're using Laravel Herd, it should be "),t("code",null,"http://comet-components.test")])],-1))]),t("li",null,[l(o,{to:"/development-core/testing/browser.html"},{default:i(()=>e[11]||(e[11]=[n("Browser testing server")])),_:1}),e[12]||(e[12]=n(" running and successfully loading pages"))])]),e[18]||(e[18]=d(`<h2 id="troubleshooting" tabindex="-1"><a class="header-anchor" href="#troubleshooting"><span>Troubleshooting</span></a></h2><details class="hint-container details"><summary>Missing Playwright browsers in Windows</summary><p>In a separate PowerShell window with admin privileges:</p><div class="language-powershell" data-highlighter="prismjs" data-ext="powershell"><pre><code><span class="line">npx playwright install firefox</span>
<span class="line"></span></code></pre></div></details>`,2))])}const f=a(p,[["render",b]]),v=JSON.parse('{"path":"/development-core/testing/integration-testing.html","title":"Integration testing (Playwright)","lang":"en-AU","frontmatter":{"title":"Integration testing (Playwright)","position":4},"headers":[{"level":2,"title":"Prerequisites","slug":"prerequisites","link":"#prerequisites","children":[]},{"level":2,"title":"Troubleshooting","slug":"troubleshooting","link":"#troubleshooting","children":[]}],"git":{},"filePathRelative":"development-core/testing/integration-testing.md"}');export{f as comp,v as data};
