import{_ as p,c as d,a as l,b as s,e as a,w as t,d as n,r,o as c}from"./app-Wu-SL-7z.js";const h="/docs/terminal-app.png",u="/docs/terminal-phpstorm.png",m={},g={class:"table-of-contents"};function f(b,e){const o=r("router-link"),i=r("RouteLink");return c(),d("div",null,[e[8]||(e[8]=l('<h1 id="windows-subsystem-for-linux-wsl" tabindex="-1"><a class="header-anchor" href="#windows-subsystem-for-linux-wsl"><span>Windows Subsystem for Linux (WSL)</span></a></h1><div class="hint-container info"><p class="hint-container-title">Info</p><p>WSL = Windows Subsystem for Linux. It allows you to run a Linux terminal within Windows, which provides a Bash shell as opposed to the Command Prompt or PowerShell.</p><p>This enables you to use Bash commands (which are much more common in web development documentation and tutorials than PowerShell or CMD), as well as tools like <a href="https://ohmyz.sh/" target="_blank" rel="noopener noreferrer">Oh My ZSH</a> and plugins like <a href="https://github.com/zsh-users/zsh-autosuggestions" target="_blank" rel="noopener noreferrer">autosuggestions</a> and <a href="https://github.com/zsh-users/zsh-syntax-highlighting" target="_blank" rel="noopener noreferrer">syntax highlighting</a>.</p></div>',2)),s("nav",g,[s("ul",null,[s("li",null,[a(o,{to:"#installing-wsl"},{default:t(()=>e[0]||(e[0]=[n("Installing WSL")])),_:1})]),s("li",null,[a(o,{to:"#using-wsl"},{default:t(()=>e[1]||(e[1]=[n("Using WSL")])),_:1})]),s("li",null,[a(o,{to:"#setting-up-php-node-etc-for-use-in-the-wsl-terminal"},{default:t(()=>e[2]||(e[2]=[n("Setting up PHP, Node, etc for use in the WSL terminal")])),_:1})])])]),e[9]||(e[9]=l('<h2 id="installing-wsl" tabindex="-1"><a class="header-anchor" href="#installing-wsl"><span>Installing WSL</span></a></h2><p>You can install WSL <a href="https://learn.microsoft.com/en-us/windows/wsl/install" target="_blank" rel="noopener noreferrer">through PowerShell</a> or through the Microsoft Store by finding your Linux distribution of choice, such as <a href="https://apps.microsoft.com/detail/9MSVKQC78PK6?hl=en-us&amp;gl=AU&amp;ocid=pdpshare" target="_blank" rel="noopener noreferrer">Debian</a> or <a href="https://apps.microsoft.com/detail/9PDXGNCFSCZV?hl=en-us&amp;gl=AU&amp;ocid=pdpshare" target="_blank" rel="noopener noreferrer">Ubuntu</a>.</p><div class="hint-container note"><p class="hint-container-title">Note</p><p>There are two versions of WSL: WSL1 and WSL2. WSL1 provides a simple terminal that integrates with the Windows filesystem and applications, whereas WSL2 provides a complete Linux kernel in a virtual machine.</p><p>All documentation in this site that refers to WSL has been written while using WSL1 with <a href="https://apps.microsoft.com/detail/9MSVKQC78PK6?hl=en-us&amp;gl=AU&amp;ocid=pdpshare" target="_blank" rel="noopener noreferrer">Debian</a>. All commands are the same for Ubuntu, which is a commonly documented option elsewhere.</p><p>You can fnd out more about the differences <a href="https://learn.microsoft.com/en-us/windows/wsl/compare-versions" target="_blank" rel="noopener noreferrer">in the Microsoft docs - Comparing WSL Versions</a>.</p></div><h2 id="using-wsl" tabindex="-1"><a class="header-anchor" href="#using-wsl"><span>Using WSL</span></a></h2><p>You can open your WSL terminal in the Windows Terminal app. You can set it as the default tab in <code>Settings &gt; Default profile</code>.</p><p>If it isn&#39;t the default, you can select it in the new tab options:</p><p><img src="'+h+'" alt="terminal-app.png"></p><p>PhpStorm works very similarly, and you can set it to be your default terminal in <code>Settings &gt; Tools &gt; Terminal</code> by entering the path to <code>wsl.exe</code> in the <code>Shell path</code> field:</p><p><img src="'+u+'" alt="phpstorm-terminal.png"></p><h2 id="setting-up-php-node-etc-for-use-in-the-wsl-terminal" tabindex="-1"><a class="header-anchor" href="#setting-up-php-node-etc-for-use-in-the-wsl-terminal"><span>Setting up PHP, Node, etc for use in the WSL terminal</span></a></h2><p>The tool-specific guides in this site cover WSL usage options:</p>',11)),s("ul",null,[s("li",null,[a(i,{to:"/local-dev-deep-dives/tooling-guides/php.html"},{default:t(()=>e[3]||(e[3]=[n("PHP on Windows")])),_:1})]),s("li",null,[a(i,{to:"/local-dev-deep-dives/tooling-guides/node.html"},{default:t(()=>e[4]||(e[4]=[n("Node on Windows")])),_:1})])]),e[10]||(e[10]=l(`<p>The TL;DR is that you can either install things natively in WSL or use the Windows versions via aliases and/or symlinks.</p><p>To add aliases to your <code>.bashrc</code> or <code>.zshrc</code> file to point to the Windows executables:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token builtin class-name">alias</span> <span class="token assign-left variable">composer</span><span class="token operator">=</span><span class="token string">&#39;powershell.exe /c C:\\\\Users\\\\LeesaWard\\\\.config\\\\herd\\\\bin\\\\composer.bat&#39;</span> <span class="token comment"># Use Windows Composer as set by Herd</span></span>
<span class="line"><span class="token builtin class-name">alias</span> <span class="token assign-left variable">php</span><span class="token operator">=</span><span class="token string">&#39;powershell.exe /c C:\\\\Users\\\\LeesaWard\\\\.config\\\\herd\\\\bin\\\\php.bat&#39;</span> <span class="token comment"># Use Windows PHP as set by Herd</span></span>
<span class="line"><span class="token builtin class-name">alias</span> <span class="token assign-left variable">sass</span><span class="token operator">=</span><span class="token string">&quot;powershell.exe sass -c \\<span class="token variable"><span class="token variable">$(</span>wslpath <span class="token parameter variable">-w</span> <span class="token punctuation">\\</span>$1<span class="token variable">)</span></span>&#39;&quot;</span> <span class="token comment"># Use Dart Sass installed via Chocolatey</span></span>
<span class="line"><span class="token builtin class-name">alias</span> <span class="token assign-left variable">node</span><span class="token operator">=</span><span class="token string">&#39;/mnt/c/Program\\ Files/nodejs/node.exe&#39;</span> <span class="token comment"># Use Windows Node; this can be controlled via Herd</span></span>
<span class="line"><span class="token builtin class-name">alias</span> <span class="token assign-left variable">npm</span><span class="token operator">=</span><span class="token string">&#39;powershell.exe /c npm&#39;</span> <span class="token comment"># Use Windows NPM</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3)),s("p",null,[e[6]||(e[6]=n("You can also set PHP to use specific versions installed anywhere in Windows. For details and examples see the ")),a(i,{to:"/local-dev-deep-dives/tooling-guides/php.html"},{default:t(()=>e[5]||(e[5]=[n("PHP on Windows")])),_:1}),e[7]||(e[7]=n(" guide."))])])}const v=p(m,[["render",f]]),k=JSON.parse('{"path":"/local-dev-deep-dives/tooling-guides/wsl.html","title":"Bash/ZSH on Windows with WSL","lang":"en-AU","frontmatter":{"title":"Bash/ZSH on Windows with WSL"},"headers":[{"level":2,"title":"Installing WSL","slug":"installing-wsl","link":"#installing-wsl","children":[]},{"level":2,"title":"Using WSL","slug":"using-wsl","link":"#using-wsl","children":[]},{"level":2,"title":"Setting up PHP, Node, etc for use in the WSL terminal","slug":"setting-up-php-node-etc-for-use-in-the-wsl-terminal","link":"#setting-up-php-node-etc-for-use-in-the-wsl-terminal","children":[]}],"git":{"updatedTime":1743766162000,"contributors":[{"name":"Leesa Ward","username":"","email":"leesa@doubleedesign.com.au","commits":4}],"changelog":[{"hash":"9327d3d2a273c6125f395c48ab9acfe1e6b6df85","time":1743766162000,"email":"leesa@doubleedesign.com.au","author":"Leesa Ward","message":"Add quick start dev guide, move detail pages, and simplify sidebar"},{"hash":"8b540960a2d2a19bf7530fc92ee7e0b606d5a3cb","time":1742900302000,"email":"leesa@doubleedesign.com.au","author":"Leesa Ward","message":"Docs: Various doc tweaks"},{"hash":"22664629a8d340758d278f6315804fbb6e51b547","time":1742806549000,"email":"leesa@doubleedesign.com.au","author":"Leesa Ward","message":"Misc config fixes"},{"hash":"bd46ea421c43d7241b0682e551b9810fce24a5c8","time":1742709938000,"email":"leesa@doubleedesign.com.au","author":"Leesa Ward","message":"Docs: Finish migrating docs to VuePress"}]},"filePathRelative":"local-dev-deep-dives/tooling-guides/wsl.md"}');export{v as comp,k as data};
